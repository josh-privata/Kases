# Generated by Django 2.0.3 on 2018-12-15 02:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('entity', '0006_auto_20181208_1511'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(blank=True, help_text='Enter the job title', max_length=125, null=True, verbose_name='Job Title')),
                ('notes', models.CharField(blank=True, help_text='Enter notes', max_length=200, null=True, verbose_name='Notes')),
                ('date_start', models.DateTimeField(blank=True, help_text='Enter the start date', null=True, verbose_name='Date Started')),
                ('date_finish', models.DateTimeField(blank=True, help_text='Enter the finish date', null=True, verbose_name='Date Finished')),
                ('salary', models.PositiveIntegerField(blank=True, help_text='Enter the salary', null=True, verbose_name='Salary')),
                ('current', models.BooleanField(default=False, help_text='(Optional) Is Current', verbose_name='Current')),
            ],
            options={
                'verbose_name': 'Employment',
                'verbose_name_plural': 'Employment',
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmployment',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('job_title', models.CharField(blank=True, help_text='Enter the job title', max_length=125, null=True, verbose_name='Job Title')),
                ('notes', models.CharField(blank=True, help_text='Enter notes', max_length=200, null=True, verbose_name='Notes')),
                ('date_start', models.DateTimeField(blank=True, help_text='Enter the start date', null=True, verbose_name='Date Started')),
                ('date_finish', models.DateTimeField(blank=True, help_text='Enter the finish date', null=True, verbose_name='Date Finished')),
                ('salary', models.PositiveIntegerField(blank=True, help_text='Enter the salary', null=True, verbose_name='Salary')),
                ('current', models.BooleanField(default=False, help_text='(Optional) Is Current', verbose_name='Current')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Employment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.AlterModelOptions(
            name='historicalperson',
            options={'get_latest_by': 'history_date', 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical Person'},
        ),
        migrations.AlterModelOptions(
            name='person',
            options={'verbose_name': 'Person', 'verbose_name_plural': 'People'},
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='anniversary',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='birthday',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='job_title',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='role',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='salary',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='slug_first',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='slug_last',
        ),
        migrations.RemoveField(
            model_name='historicalperson',
            name='slug_middle',
        ),
        migrations.RemoveField(
            model_name='person',
            name='anniversary',
        ),
        migrations.RemoveField(
            model_name='person',
            name='birthday',
        ),
        migrations.RemoveField(
            model_name='person',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='person',
            name='job_title',
        ),
        migrations.RemoveField(
            model_name='person',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='person',
            name='role',
        ),
        migrations.RemoveField(
            model_name='person',
            name='salary',
        ),
        migrations.RemoveField(
            model_name='person',
            name='slug_first',
        ),
        migrations.RemoveField(
            model_name='person',
            name='slug_last',
        ),
        migrations.RemoveField(
            model_name='person',
            name='slug_middle',
        ),
        migrations.AddField(
            model_name='company',
            name='logo_upload',
            field=models.FileField(blank=True, help_text='Upload an logo for the company', null=True, upload_to='', verbose_name='Logo'),
        ),
        migrations.AddField(
            model_name='company',
            name='social',
            field=models.ManyToManyField(help_text='Enter the social media service', related_name='company_social', to='entity.Social', verbose_name='Social'),
        ),
        migrations.AddField(
            model_name='historicalcompany',
            name='logo_upload',
            field=models.TextField(blank=True, help_text='Upload an logo for the company', max_length=100, null=True, verbose_name='Logo'),
        ),
        migrations.AddField(
            model_name='historicalperson',
            name='dob',
            field=models.DateTimeField(blank=True, help_text='Select the date of birth', null=True, verbose_name='Date Of Birth'),
        ),
        migrations.AddField(
            model_name='historicalperson',
            name='image_upload',
            field=models.TextField(blank=True, help_text='Upload an image for the Person', max_length=100, null=True, verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='historicalperson',
            name='slug',
            field=models.SlugField(blank=True, editable=False, help_text='Enter the slug', null=True, verbose_name='Name Slug'),
        ),
        migrations.AddField(
            model_name='person',
            name='dob',
            field=models.DateTimeField(blank=True, help_text='Select the date of birth', null=True, verbose_name='Date Of Birth'),
        ),
        migrations.AddField(
            model_name='person',
            name='image_upload',
            field=models.FileField(blank=True, help_text='Upload an image for the Person', null=True, upload_to='', verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='person',
            name='slug',
            field=models.SlugField(blank=True, editable=False, help_text='Enter the slug', null=True, verbose_name='Name Slug'),
        ),
        migrations.AddField(
            model_name='person',
            name='social',
            field=models.ManyToManyField(help_text='Enter the social media service', related_name='person_social', to='entity.Social', verbose_name='Social'),
        ),
        migrations.AlterField(
            model_name='address',
            name='city',
            field=models.CharField(blank=True, help_text='Enter the city', max_length=100, null=True, verbose_name='City'),
        ),
        migrations.AlterField(
            model_name='address',
            name='country',
            field=models.CharField(blank=True, choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], help_text='Select the country', max_length=3, null=True, verbose_name='Country'),
        ),
        migrations.AlterField(
            model_name='address',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='address',
            name='line1',
            field=models.CharField(blank=True, help_text='Enter address line 1', max_length=120, null=True, verbose_name='Line 1'),
        ),
        migrations.AlterField(
            model_name='address',
            name='line2',
            field=models.CharField(blank=True, help_text='Enter address line 2', max_length=120, null=True, verbose_name='Line 2'),
        ),
        migrations.AlterField(
            model_name='address',
            name='line3',
            field=models.CharField(blank=True, help_text='Enter address line 3', max_length=120, null=True, verbose_name='Line 3'),
        ),
        migrations.AlterField(
            model_name='address',
            name='location',
            field=models.CharField(blank=True, default=None, help_text='Enter the location', max_length=125, null=True, verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='address',
            name='postcode',
            field=models.CharField(blank=True, help_text='Enter the postcode', max_length=20, null=True, verbose_name='Postcode'),
        ),
        migrations.AlterField(
            model_name='address',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='address',
            name='state',
            field=models.CharField(blank=True, help_text='Enter the state', max_length=75, null=True, verbose_name='State'),
        ),
        migrations.AlterField(
            model_name='address',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Physical'), (2, 'Postal'), (3, 'Other')], help_text='Select the type of address', verbose_name='Line 3'),
        ),
        migrations.AlterField(
            model_name='company',
            name='address',
            field=models.ManyToManyField(help_text='Enter the address', related_name='company_address', to='entity.Address', verbose_name='Address'),
        ),
        migrations.AlterField(
            model_name='company',
            name='authorisation',
            field=models.ForeignKey(blank=True, help_text='Select the authorisation level', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_authorisation', to='utils.Authorisation', verbose_name='Company Authorisation'),
        ),
        migrations.AlterField(
            model_name='company',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Select the category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_category', to='entity.CompanyCategory', verbose_name='Company Category'),
        ),
        migrations.AlterField(
            model_name='company',
            name='classification',
            field=models.ForeignKey(blank=True, help_text='Select the classification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_classification', to='entity.CompanyClassification', verbose_name='Company Classification'),
        ),
        migrations.AlterField(
            model_name='company',
            name='code',
            field=models.CharField(blank=True, help_text='Enter the issuer code for the company', max_length=5, null=True, verbose_name='Issuer Code'),
        ),
        migrations.AlterField(
            model_name='company',
            name='email',
            field=models.ManyToManyField(help_text='Enter the email address', related_name='company_email', to='entity.Email', verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='company',
            name='industry',
            field=models.PositiveIntegerField(blank=True, choices=[('100', 'ADVERTISING'), ('200', 'AGRICULTURE'), ('300', 'APPAREL & ACCESSORIES'), ('400', 'AUTOMOTIVE'), ('500', 'BANKING'), ('600', 'BIOTECHNOLOGY'), ('700', 'BUILDING MATERIALS & EQUIPMENT'), ('800', 'CHEMICAL'), ('900', 'COMPUTER'), ('1000', 'EDUCATION'), ('1100', 'ELECTRONICS'), ('1200', 'ENERGY'), ('1300', 'ENTERTAINMENT & LEISURE'), ('1400', 'FINANCE'), ('1500', 'FOOD & BEVERAGE'), ('1600', 'GROCERY'), ('1700', 'HEALTHCARE'), ('1800', 'INSURANCE'), ('1900', 'LEGAL'), ('2000', 'MANUFACTURING'), ('2100', 'PUBLISHING'), ('2200', 'REAL ESTATE'), ('2300', 'SERVICE'), ('2400', 'SOFTWARE'), ('2500', 'SPORTS'), ('2600', 'TECHNOLOGY'), ('2700', 'TELECOMMUNICATIONS'), ('2800', 'TELEVISION'), ('2900', 'TRANSPORTATION'), ('3000', 'VENTURE CAPITAL')], help_text='Select an industry for the company', null=True, verbose_name='Industry'),
        ),
        migrations.AlterField(
            model_name='company',
            name='slug',
            field=models.SlugField(blank=True, editable=False, help_text='Enter the slug', null=True, verbose_name='Title Slug'),
        ),
        migrations.AlterField(
            model_name='company',
            name='status',
            field=models.ForeignKey(blank=True, help_text='Select the status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_status', to='entity.CompanyStatus', verbose_name='Company Status'),
        ),
        migrations.AlterField(
            model_name='company',
            name='telephone',
            field=models.ManyToManyField(help_text='Enter the telephone number', related_name='company_telephone', to='entity.Telephone', verbose_name='Telephone'),
        ),
        migrations.AlterField(
            model_name='company',
            name='title',
            field=models.CharField(blank=True, help_text='Enter a title for the company', max_length=125, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='company',
            name='type',
            field=models.ForeignKey(blank=True, help_text='Select the type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_type', to='entity.CompanyType', verbose_name='Company Type'),
        ),
        migrations.AlterField(
            model_name='company',
            name='website',
            field=models.ManyToManyField(help_text='Enter the website', related_name='company_website', to='entity.Website', verbose_name='Website'),
        ),
        migrations.AlterField(
            model_name='companystatusgroup',
            name='status',
            field=models.ManyToManyField(blank=True, help_text='Select Company Status', to='entity.CompanyStatus', verbose_name='Company Status'),
        ),
        migrations.AlterField(
            model_name='email',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='email',
            name='email',
            field=models.EmailField(blank=True, default=None, help_text='Enter email', max_length=254, null=True, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='email',
            name='location',
            field=models.CharField(blank=True, default=None, help_text='Enter location', max_length=125, null=True, verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='email',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='city',
            field=models.CharField(blank=True, help_text='Enter the city', max_length=100, null=True, verbose_name='City'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='country',
            field=models.CharField(blank=True, choices=[('GB', 'United Kingdom'), ('AF', 'Afghanistan'), ('AX', 'Aland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic of the'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cote d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See (Vatican City State)'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People's Republic of"), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States of'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('BL', 'Saint Barthelemy'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], help_text='Select the country', max_length=3, null=True, verbose_name='Country'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='line1',
            field=models.CharField(blank=True, help_text='Enter address line 1', max_length=120, null=True, verbose_name='Line 1'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='line2',
            field=models.CharField(blank=True, help_text='Enter address line 2', max_length=120, null=True, verbose_name='Line 2'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='line3',
            field=models.CharField(blank=True, help_text='Enter address line 3', max_length=120, null=True, verbose_name='Line 3'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='location',
            field=models.CharField(blank=True, default=None, help_text='Enter the location', max_length=125, null=True, verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='postcode',
            field=models.CharField(blank=True, help_text='Enter the postcode', max_length=20, null=True, verbose_name='Postcode'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='state',
            field=models.CharField(blank=True, help_text='Enter the state', max_length=75, null=True, verbose_name='State'),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Physical'), (2, 'Postal'), (3, 'Other')], help_text='Select the type of address', verbose_name='Line 3'),
        ),
        migrations.AlterField(
            model_name='historicalcompany',
            name='code',
            field=models.CharField(blank=True, help_text='Enter the issuer code for the company', max_length=5, null=True, verbose_name='Issuer Code'),
        ),
        migrations.AlterField(
            model_name='historicalcompany',
            name='industry',
            field=models.PositiveIntegerField(blank=True, choices=[('100', 'ADVERTISING'), ('200', 'AGRICULTURE'), ('300', 'APPAREL & ACCESSORIES'), ('400', 'AUTOMOTIVE'), ('500', 'BANKING'), ('600', 'BIOTECHNOLOGY'), ('700', 'BUILDING MATERIALS & EQUIPMENT'), ('800', 'CHEMICAL'), ('900', 'COMPUTER'), ('1000', 'EDUCATION'), ('1100', 'ELECTRONICS'), ('1200', 'ENERGY'), ('1300', 'ENTERTAINMENT & LEISURE'), ('1400', 'FINANCE'), ('1500', 'FOOD & BEVERAGE'), ('1600', 'GROCERY'), ('1700', 'HEALTHCARE'), ('1800', 'INSURANCE'), ('1900', 'LEGAL'), ('2000', 'MANUFACTURING'), ('2100', 'PUBLISHING'), ('2200', 'REAL ESTATE'), ('2300', 'SERVICE'), ('2400', 'SOFTWARE'), ('2500', 'SPORTS'), ('2600', 'TECHNOLOGY'), ('2700', 'TELECOMMUNICATIONS'), ('2800', 'TELEVISION'), ('2900', 'TRANSPORTATION'), ('3000', 'VENTURE CAPITAL')], help_text='Select an industry for the company', null=True, verbose_name='Industry'),
        ),
        migrations.AlterField(
            model_name='historicalcompany',
            name='slug',
            field=models.SlugField(blank=True, editable=False, help_text='Enter the slug', null=True, verbose_name='Title Slug'),
        ),
        migrations.AlterField(
            model_name='historicalcompany',
            name='title',
            field=models.CharField(blank=True, help_text='Enter a title for the company', max_length=125, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='historicalemail',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='historicalemail',
            name='email',
            field=models.EmailField(blank=True, default=None, help_text='Enter email', max_length=254, null=True, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='historicalemail',
            name='location',
            field=models.CharField(blank=True, default=None, help_text='Enter location', max_length=125, null=True, verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='historicalemail',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='age',
            field=models.PositiveIntegerField(blank=True, help_text="Enter the person's age", null=True, verbose_name='Age'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='aliases',
            field=models.CharField(blank=True, help_text='Enter any known aliases', max_length=200, null=True, verbose_name='Aliases'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='first_name',
            field=models.CharField(blank=True, help_text='Enter a first name', max_length=125, null=True, verbose_name='First Name'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='gender',
            field=models.PositiveIntegerField(blank=True, choices=[('1', 'Unknown'), ('2', 'Male'), ('3', 'Female')], help_text='Select the gender', max_length=1, null=True, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='height',
            field=models.PositiveIntegerField(blank=True, help_text="Enter the person's height in centimeters", null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='last_name',
            field=models.CharField(blank=True, help_text='Enter a last name', max_length=125, null=True, verbose_name='Last Name'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='middle_names',
            field=models.CharField(blank=True, help_text='Enter middle names', max_length=125, null=True, verbose_name='Middle Names'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='nickname',
            field=models.CharField(blank=True, help_text='Enter any nicknames', max_length=200, null=True, verbose_name='Nickname'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='prefix',
            field=models.PositiveIntegerField(blank=True, choices=[('1', 'Mr.'), ('2', 'Mrs.')], default='1', help_text='Select prefix', null=True, verbose_name='Prefix'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='suffix',
            field=models.CharField(blank=True, help_text='Enter a suffix', max_length=55, null=True, verbose_name='Suffix'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='taxfile',
            field=models.CharField(blank=True, help_text='Enter the tax file number', max_length=35, null=True, verbose_name='Tax File Number'),
        ),
        migrations.AlterField(
            model_name='historicalperson',
            name='weight',
            field=models.PositiveIntegerField(blank=True, help_text="Enter the person's weight in kilograms", null=True, verbose_name='Weight'),
        ),
        migrations.AlterField(
            model_name='historicalsocial',
            name='alias',
            field=models.CharField(blank=True, default=None, help_text='Enter the alias', max_length=125, null=True, verbose_name='Social Media Alias'),
        ),
        migrations.AlterField(
            model_name='historicalsocial',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='historicalsocial',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='historicalsocial',
            name='service',
            field=models.CharField(blank=True, default=None, help_text='Enter the social media service name', max_length=125, null=True, verbose_name='Social Media Service'),
        ),
        migrations.AlterField(
            model_name='historicalsocial',
            name='url',
            field=models.URLField(help_text='Enter the profile URL', verbose_name='Profile URL'),
        ),
        migrations.AlterField(
            model_name='historicaltelephone',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='historicaltelephone',
            name='number',
            field=models.CharField(blank=True, help_text='Enter address line 1', max_length=40, null=True, verbose_name='Phone Number'),
        ),
        migrations.AlterField(
            model_name='historicaltelephone',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='historicaltelephone',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Home'), (2, 'Work'), (3, 'Mobile'), (4, 'Fax'), (5, 'Other')], help_text='Enter address line 1', verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='historicalwebsite',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='historicalwebsite',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='historicalwebsite',
            name='url',
            field=models.URLField(help_text='Enter the website URL', verbose_name='Website URL'),
        ),
        migrations.AlterField(
            model_name='person',
            name='address',
            field=models.ManyToManyField(help_text='Enter the address', related_name='person_address', to='entity.Address', verbose_name='Address'),
        ),
        migrations.AlterField(
            model_name='person',
            name='age',
            field=models.PositiveIntegerField(blank=True, help_text="Enter the person's age", null=True, verbose_name='Age'),
        ),
        migrations.AlterField(
            model_name='person',
            name='aliases',
            field=models.CharField(blank=True, help_text='Enter any known aliases', max_length=200, null=True, verbose_name='Aliases'),
        ),
        migrations.AlterField(
            model_name='person',
            name='authorisation',
            field=models.ForeignKey(blank=True, help_text='Select the authorisation level', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_authorisation', to='utils.Authorisation', verbose_name='Person Authorisation'),
        ),
        migrations.AlterField(
            model_name='person',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Select the category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_category', to='entity.PersonCategory', verbose_name='Person Category'),
        ),
        migrations.AlterField(
            model_name='person',
            name='classification',
            field=models.ForeignKey(blank=True, help_text='Select the classification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_classification', to='entity.PersonClassification', verbose_name='Person Classification'),
        ),
        migrations.AlterField(
            model_name='person',
            name='email',
            field=models.ManyToManyField(help_text='Enter the email address', related_name='person_email', to='entity.Email', verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='person',
            name='first_name',
            field=models.CharField(blank=True, help_text='Enter a first name', max_length=125, null=True, verbose_name='First Name'),
        ),
        migrations.AlterField(
            model_name='person',
            name='gender',
            field=models.PositiveIntegerField(blank=True, choices=[('1', 'Unknown'), ('2', 'Male'), ('3', 'Female')], help_text='Select the gender', max_length=1, null=True, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='person',
            name='height',
            field=models.PositiveIntegerField(blank=True, help_text="Enter the person's height in centimeters", null=True, verbose_name='Height'),
        ),
        migrations.AlterField(
            model_name='person',
            name='last_name',
            field=models.CharField(blank=True, help_text='Enter a last name', max_length=125, null=True, verbose_name='Last Name'),
        ),
        migrations.AlterField(
            model_name='person',
            name='middle_names',
            field=models.CharField(blank=True, help_text='Enter middle names', max_length=125, null=True, verbose_name='Middle Names'),
        ),
        migrations.AlterField(
            model_name='person',
            name='nickname',
            field=models.CharField(blank=True, help_text='Enter any nicknames', max_length=200, null=True, verbose_name='Nickname'),
        ),
        migrations.AlterField(
            model_name='person',
            name='prefix',
            field=models.PositiveIntegerField(blank=True, choices=[('1', 'Mr.'), ('2', 'Mrs.')], default='1', help_text='Select prefix', null=True, verbose_name='Prefix'),
        ),
        migrations.AlterField(
            model_name='person',
            name='status',
            field=models.ForeignKey(blank=True, help_text='Select the status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_status', to='entity.PersonStatus', verbose_name='Person Status'),
        ),
        migrations.AlterField(
            model_name='person',
            name='suffix',
            field=models.CharField(blank=True, help_text='Enter a suffix', max_length=55, null=True, verbose_name='Suffix'),
        ),
        migrations.AlterField(
            model_name='person',
            name='taxfile',
            field=models.CharField(blank=True, help_text='Enter the tax file number', max_length=35, null=True, verbose_name='Tax File Number'),
        ),
        migrations.AlterField(
            model_name='person',
            name='telephone',
            field=models.ManyToManyField(help_text='Enter the telephone number', related_name='person_telephone', to='entity.Telephone', verbose_name='Telephone'),
        ),
        migrations.AlterField(
            model_name='person',
            name='type',
            field=models.ForeignKey(blank=True, help_text='Select the type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_type', to='entity.PersonType', verbose_name='Person Type'),
        ),
        migrations.AlterField(
            model_name='person',
            name='website',
            field=models.ManyToManyField(help_text='Enter the website', related_name='person_website', to='entity.Website', verbose_name='Website'),
        ),
        migrations.AlterField(
            model_name='person',
            name='weight',
            field=models.PositiveIntegerField(blank=True, help_text="Enter the person's weight in kilograms", null=True, verbose_name='Weight'),
        ),
        migrations.AlterField(
            model_name='personstatusgroup',
            name='status',
            field=models.ManyToManyField(blank=True, help_text='Select Person Status', to='entity.PersonStatus', verbose_name='Person Status'),
        ),
        migrations.AlterField(
            model_name='social',
            name='alias',
            field=models.CharField(blank=True, default=None, help_text='Enter the alias', max_length=125, null=True, verbose_name='Social Media Alias'),
        ),
        migrations.AlterField(
            model_name='social',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='social',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='social',
            name='service',
            field=models.CharField(blank=True, default=None, help_text='Enter the social media service name', max_length=125, null=True, verbose_name='Social Media Service'),
        ),
        migrations.AlterField(
            model_name='social',
            name='url',
            field=models.URLField(help_text='Enter the profile URL', verbose_name='Profile URL'),
        ),
        migrations.AlterField(
            model_name='telephone',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='telephone',
            name='number',
            field=models.CharField(blank=True, help_text='Enter address line 1', max_length=40, null=True, verbose_name='Phone Number'),
        ),
        migrations.AlterField(
            model_name='telephone',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='telephone',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Home'), (2, 'Work'), (3, 'Mobile'), (4, 'Fax'), (5, 'Other')], help_text='Enter address line 1', verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='website',
            name='current',
            field=models.BooleanField(default=True, help_text='Is current', verbose_name='Current'),
        ),
        migrations.AlterField(
            model_name='website',
            name='primary',
            field=models.BooleanField(default=False, help_text='Is primary', verbose_name='Primary'),
        ),
        migrations.AlterField(
            model_name='website',
            name='url',
            field=models.URLField(help_text='Enter the website URL', verbose_name='Website URL'),
        ),
        migrations.AddField(
            model_name='historicalemployment',
            name='company',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Company'),
        ),
        migrations.AddField(
            model_name='historicalemployment',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employment',
            name='company',
            field=models.ForeignKey(blank=True, help_text='Select the company', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='person_company', to='entity.Company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='person',
            name='employment',
            field=models.ManyToManyField(help_text='Enter employment', related_name='person_employment', to='entity.Employment', verbose_name='Employment'),
        ),
    ]
