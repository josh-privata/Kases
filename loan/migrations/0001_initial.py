# Generated by Django 2.0.3 on 2018-12-23 01:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('case', '0001_initial'),
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalLoan',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('private', models.BooleanField(default=False, help_text='(Optional) Is Private', verbose_name='Private')),
                ('description', models.CharField(blank=True, default=None, help_text='(Optional) Enter a description', max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, help_text='The creation date', verbose_name='Creation Date')),
                ('modified', models.DateTimeField(editable=False, help_text='The mdification date', null=True, verbose_name='Modification date')),
                ('approver_note', models.TextField(blank=True, help_text="Enter an approver's note", max_length=1000, null=True, verbose_name='Approver Note')),
                ('return_note', models.TextField(blank=True, help_text='Enter a return note', max_length=1000, null=True, verbose_name='Return Note')),
                ('booked_from', models.DateField(blank=True, help_text='Enter the booked from date', null=True, verbose_name='Booked From')),
                ('booked_until', models.DateField(blank=True, help_text='Enter the booked until date', null=True, verbose_name='Booked Until')),
                ('date_taken', models.DateField(blank=True, help_text='Enter the date taken', null=True, verbose_name='Date Taken')),
                ('date_returned', models.DateField(blank=True, help_text='Enter the date returned', null=True, verbose_name='Date Returned')),
                ('original_condition', models.CharField(blank=True, choices=[('AV', 'Average'), ('BA', 'Below Average'), ('DM', 'Damaged'), ('EX', 'Excellent'), ('GD', 'Good'), ('LO', 'Lost'), ('MI', 'Missing'), ('NW', 'New'), ('PO', 'Poor')], help_text='Select the original condition', max_length=2, null=True, verbose_name='Original Condition')),
                ('return_condition', models.CharField(blank=True, choices=[('AV', 'Average'), ('BA', 'Below Average'), ('DM', 'Damaged'), ('EX', 'Excellent'), ('GD', 'Good'), ('LO', 'Lost'), ('MI', 'Missing'), ('NW', 'New'), ('PO', 'Poor')], help_text='Select the returned condition', max_length=2, null=True, verbose_name='Returned Condition')),
                ('status', models.CharField(blank=True, choices=[('LP', 'Awaiting Loan Approval'), ('LA', 'Loan Approved'), ('LR', 'Loan Rejected'), ('LH', 'Loan On Hold'), ('LW', 'Loan Withdrawn'), ('LC', 'Loan Closed'), ('RP', 'Awaiting Return Approval'), ('RA', 'Return Approved'), ('RR', 'Return Rejected'), ('RH', 'Return On Hold'), ('RW', 'Return Withdrawn')], help_text='Select the loan status', max_length=2, null=True, verbose_name='Status')),
                ('returned', models.BooleanField(default=False, help_text='Device returned', verbose_name='Returned')),
                ('taken', models.BooleanField(default=False, help_text='Device taken', verbose_name='Taken')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('case', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='case.Case')),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.Device')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('loaned_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('loaned_to', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('returned_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('taken_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Device Loan',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(default=False, help_text='(Optional) Is Private', verbose_name='Private')),
                ('description', models.CharField(blank=True, default=None, help_text='(Optional) Enter a description', max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, help_text='The creation date', verbose_name='Creation Date')),
                ('modified', models.DateTimeField(editable=False, help_text='The mdification date', null=True, verbose_name='Modification date')),
                ('approver_note', models.TextField(blank=True, help_text="Enter an approver's note", max_length=1000, null=True, verbose_name='Approver Note')),
                ('return_note', models.TextField(blank=True, help_text='Enter a return note', max_length=1000, null=True, verbose_name='Return Note')),
                ('booked_from', models.DateField(blank=True, help_text='Enter the booked from date', null=True, verbose_name='Booked From')),
                ('booked_until', models.DateField(blank=True, help_text='Enter the booked until date', null=True, verbose_name='Booked Until')),
                ('date_taken', models.DateField(blank=True, help_text='Enter the date taken', null=True, verbose_name='Date Taken')),
                ('date_returned', models.DateField(blank=True, help_text='Enter the date returned', null=True, verbose_name='Date Returned')),
                ('original_condition', models.CharField(blank=True, choices=[('AV', 'Average'), ('BA', 'Below Average'), ('DM', 'Damaged'), ('EX', 'Excellent'), ('GD', 'Good'), ('LO', 'Lost'), ('MI', 'Missing'), ('NW', 'New'), ('PO', 'Poor')], help_text='Select the original condition', max_length=2, null=True, verbose_name='Original Condition')),
                ('return_condition', models.CharField(blank=True, choices=[('AV', 'Average'), ('BA', 'Below Average'), ('DM', 'Damaged'), ('EX', 'Excellent'), ('GD', 'Good'), ('LO', 'Lost'), ('MI', 'Missing'), ('NW', 'New'), ('PO', 'Poor')], help_text='Select the returned condition', max_length=2, null=True, verbose_name='Returned Condition')),
                ('status', models.CharField(blank=True, choices=[('LP', 'Awaiting Loan Approval'), ('LA', 'Loan Approved'), ('LR', 'Loan Rejected'), ('LH', 'Loan On Hold'), ('LW', 'Loan Withdrawn'), ('LC', 'Loan Closed'), ('RP', 'Awaiting Return Approval'), ('RA', 'Return Approved'), ('RR', 'Return Rejected'), ('RH', 'Return On Hold'), ('RW', 'Return Withdrawn')], help_text='Select the loan status', max_length=2, null=True, verbose_name='Status')),
                ('returned', models.BooleanField(default=False, help_text='Device returned', verbose_name='Returned')),
                ('taken', models.BooleanField(default=False, help_text='Device taken', verbose_name='Taken')),
                ('case', models.ForeignKey(blank=True, help_text='Select the case', on_delete=django.db.models.deletion.DO_NOTHING, related_name='loan_case', to='case.Case', verbose_name='Case')),
                ('device', models.ForeignKey(blank=True, help_text='Select the device', on_delete=django.db.models.deletion.DO_NOTHING, related_name='loan_device', to='inventory.Device', verbose_name='Device')),
                ('loaned_by', models.ForeignKey(blank=True, help_text='Select who the device is loaned by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='loaned_by', to=settings.AUTH_USER_MODEL, verbose_name='Loaned By')),
                ('loaned_to', models.ForeignKey(blank=True, help_text='Select who the device is loaned to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='loaned_to', to=settings.AUTH_USER_MODEL, verbose_name='Loaned To')),
                ('returned_by', models.ForeignKey(blank=True, help_text='Select who the device was returned by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='returned_by', to=settings.AUTH_USER_MODEL, verbose_name='Returned By')),
                ('taken_by', models.ForeignKey(blank=True, help_text='Select who the device was taken by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='taken_by', to=settings.AUTH_USER_MODEL, verbose_name='Taken By')),
            ],
            options={
                'verbose_name': 'Device Loan',
                'verbose_name_plural': 'Device Loans',
            },
        ),
    ]
