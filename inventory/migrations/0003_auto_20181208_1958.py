# Generated by Django 2.0.3 on 2018-12-08 09:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('entity', '0006_auto_20181208_1511'),
        ('inventory', '0002_auto_20181208_1511'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='comment',
            name='device',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='user',
        ),
        migrations.RemoveField(
            model_name='devicestatusgroup',
            name='status',
        ),
        migrations.RemoveField(
            model_name='historicalcomment',
            name='device',
        ),
        migrations.RemoveField(
            model_name='historicalcomment',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalcomment',
            name='user',
        ),
        migrations.RemoveField(
            model_name='historicaldevicestatus',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicaldevicestatusgroup',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicaldevicetype',
            name='history_user',
        ),
        migrations.AlterModelOptions(
            name='device',
            options={'verbose_name': 'Device', 'verbose_name_plural': 'Devices'},
        ),
        migrations.AlterModelOptions(
            name='historicaldevice',
            options={'get_latest_by': 'history_date', 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical Device'},
        ),
        migrations.RenameField(
            model_name='historicaldevice',
            old_name='resposible_party',
            new_name='manager',
        ),
        migrations.RenameField(
            model_name='historicaldevice',
            old_name='rep',
            new_name='sales_rep',
        ),
        migrations.RenameField(
            model_name='historicalservice',
            old_name='responsible',
            new_name='manager',
        ),
        migrations.RemoveField(
            model_name='device',
            name='make',
        ),
        migrations.RemoveField(
            model_name='device',
            name='purpose',
        ),
        migrations.RemoveField(
            model_name='device',
            name='rep',
        ),
        migrations.RemoveField(
            model_name='device',
            name='resposible_party',
        ),
        migrations.RemoveField(
            model_name='device',
            name='service_id',
        ),
        migrations.RemoveField(
            model_name='device',
            name='type',
        ),
        migrations.RemoveField(
            model_name='historicaldevice',
            name='make',
        ),
        migrations.RemoveField(
            model_name='historicaldevice',
            name='purpose',
        ),
        migrations.RemoveField(
            model_name='historicaldevice',
            name='service_id',
        ),
        migrations.RemoveField(
            model_name='historicaldevice',
            name='type',
        ),
        migrations.RemoveField(
            model_name='historicalservice',
            name='device_replaced',
        ),
        migrations.RemoveField(
            model_name='historicalservice',
            name='left_inventory',
        ),
        migrations.RemoveField(
            model_name='historicalservice',
            name='parts_replaced',
        ),
        migrations.RemoveField(
            model_name='historicalservice',
            name='work_done',
        ),
        migrations.RemoveField(
            model_name='historicalservicecontract',
            name='contract_id',
        ),
        migrations.RemoveField(
            model_name='historicalservicecontract',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='historicalservicecontract',
            name='renewal_date',
        ),
        migrations.RemoveField(
            model_name='service',
            name='device_replaced',
        ),
        migrations.RemoveField(
            model_name='service',
            name='left_inventory',
        ),
        migrations.RemoveField(
            model_name='service',
            name='parts_replaced',
        ),
        migrations.RemoveField(
            model_name='service',
            name='responsible',
        ),
        migrations.RemoveField(
            model_name='service',
            name='work_done',
        ),
        migrations.RemoveField(
            model_name='servicecontract',
            name='contract_id',
        ),
        migrations.RemoveField(
            model_name='servicecontract',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='servicecontract',
            name='renewal_date',
        ),
        migrations.AddField(
            model_name='device',
            name='internal_id',
            field=models.CharField(blank=True, help_text='Enter the internal id of the Device', max_length=45, null=True, verbose_name='Internal ID'),
        ),
        migrations.AddField(
            model_name='device',
            name='manager',
            field=models.ForeignKey(blank=True, help_text='Select the Device Manager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_manager', to=settings.AUTH_USER_MODEL, verbose_name='Device Manager'),
        ),
        migrations.AddField(
            model_name='device',
            name='sales_rep',
            field=models.ForeignKey(blank=True, help_text='Select the Sales Representative', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales_rep', to='entity.Person', verbose_name='Vendor Sales Rep'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='internal_id',
            field=models.CharField(blank=True, help_text='Enter the internal id of the Device', max_length=45, null=True, verbose_name='Internal ID'),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='leave_date',
            field=models.DateField(blank=True, help_text='Enter the date left for service', null=True, verbose_name='Date Left Inventory'),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='status',
            field=models.CharField(choices=[('AW', 'Awaiting Service'), ('UN', 'Being Serviced'), ('AR', 'Awaiting Return'), ('RT', 'Returned From Service'), ('RE', 'Returned To Stock'), ('ST', 'In Storage'), ('RE', 'Replacement Required'), ('MI', 'Missing'), ('DE', 'Decommisioned'), ('OB', 'Obselete'), ('HO', 'On Hold')], default='AW', help_text='Select the sservice status', max_length=2, verbose_name='Service Status'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='tested',
            field=models.BooleanField(default=True, help_text='Device tested upon return', verbose_name='Tested By'),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='tested_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservicecontract',
            name='active',
            field=models.BooleanField(default=False, help_text='(Optional) Is Contract Active', verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='historicalservicecontract',
            name='contract_end',
            field=models.DateField(blank=True, help_text='Enter a renewal date for the Service Contract', null=True, verbose_name='Renewal Date'),
        ),
        migrations.AddField(
            model_name='historicalservicecontract',
            name='contract_start',
            field=models.DateField(blank=True, help_text='Enter a duration for the Service Contract', null=True, verbose_name='Contract Duration'),
        ),
        migrations.AddField(
            model_name='historicalservicecontract',
            name='internal_id',
            field=models.CharField(blank=True, help_text='Enter the internal id for the Service Contract', max_length=45, null=True, verbose_name='Internal ID'),
        ),
        migrations.AddField(
            model_name='service',
            name='leave_date',
            field=models.DateField(blank=True, help_text='Enter the date left for service', null=True, verbose_name='Date Left Inventory'),
        ),
        migrations.AddField(
            model_name='service',
            name='manager',
            field=models.ForeignKey(blank=True, help_text='Select the Service manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_manager', to=settings.AUTH_USER_MODEL, verbose_name='Manager'),
        ),
        migrations.AddField(
            model_name='service',
            name='status',
            field=models.CharField(choices=[('AW', 'Awaiting Service'), ('UN', 'Being Serviced'), ('AR', 'Awaiting Return'), ('RT', 'Returned From Service'), ('RE', 'Returned To Stock'), ('ST', 'In Storage'), ('RE', 'Replacement Required'), ('MI', 'Missing'), ('DE', 'Decommisioned'), ('OB', 'Obselete'), ('HO', 'On Hold')], default='AW', help_text='Select the sservice status', max_length=2, verbose_name='Service Status'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='tested',
            field=models.BooleanField(default=True, help_text='Device tested upon return', verbose_name='Tested By'),
        ),
        migrations.AddField(
            model_name='service',
            name='tested_by',
            field=models.ForeignKey(blank=True, help_text='Select who tested the device upon return', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tested_by', to=settings.AUTH_USER_MODEL, verbose_name='Tested By'),
        ),
        migrations.AddField(
            model_name='servicecontract',
            name='active',
            field=models.BooleanField(default=False, help_text='(Optional) Is Contract Active', verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='servicecontract',
            name='contract_end',
            field=models.DateField(blank=True, help_text='Enter a renewal date for the Service Contract', null=True, verbose_name='Renewal Date'),
        ),
        migrations.AddField(
            model_name='servicecontract',
            name='contract_start',
            field=models.DateField(blank=True, help_text='Enter a duration for the Service Contract', null=True, verbose_name='Contract Duration'),
        ),
        migrations.AddField(
            model_name='servicecontract',
            name='internal_id',
            field=models.CharField(blank=True, help_text='Enter the internal id for the Service Contract', max_length=45, null=True, verbose_name='Internal ID'),
        ),
        migrations.AlterField(
            model_name='device',
            name='authorisation',
            field=models.ForeignKey(blank=True, help_text='Select the Device Autorisation Level', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_authorisation', to='utils.Authorisation', verbose_name='Device Authorisation'),
        ),
        migrations.AlterField(
            model_name='device',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Select the Device Category', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_category', to='inventory.DeviceCategory', verbose_name='Device Category'),
        ),
        migrations.AlterField(
            model_name='device',
            name='classification',
            field=models.ForeignKey(blank=True, help_text='Select the Device Classification', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_classification', to='inventory.DeviceClassification', verbose_name='Device Classification'),
        ),
        migrations.AlterField(
            model_name='device',
            name='condition',
            field=models.CharField(choices=[('NW', 'New'), ('EX', 'Excellent'), ('GD', 'Good'), ('AV', 'Average'), ('BA', 'Below Average'), ('PR', 'Poor'), ('DM', 'Damaged'), ('LO', 'Lost')], help_text='Select the condition of the Device', max_length=2, verbose_name='Device Condition'),
        ),
        migrations.AlterField(
            model_name='device',
            name='manufacturer',
            field=models.CharField(blank=True, help_text='Enter the Manufacturer', max_length=128, null=True, verbose_name='Device Manufacturer'),
        ),
        migrations.AlterField(
            model_name='device',
            name='model',
            field=models.CharField(blank=True, help_text='Enter a model for the Device', max_length=128, null=True, verbose_name='Device Model'),
        ),
        migrations.AlterField(
            model_name='device',
            name='model_number',
            field=models.CharField(blank=True, help_text='Enter the model number of the Device', max_length=45, null=True, verbose_name='Model Number'),
        ),
        migrations.AlterField(
            model_name='device',
            name='purchased',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the date the Device was purchased', null=True, verbose_name='Purchase Date'),
        ),
        migrations.AlterField(
            model_name='device',
            name='returnable',
            field=models.BooleanField(default=True, help_text='Is the Device returnable To stock', verbose_name='Returnable To Stock'),
        ),
        migrations.AlterField(
            model_name='device',
            name='serial_number',
            field=models.CharField(blank=True, help_text='Enter the serial number of the Device', max_length=128, null=True, verbose_name='Serial Number'),
        ),
        migrations.AlterField(
            model_name='device',
            name='service_contract',
            field=models.ForeignKey(blank=True, help_text='Select the Service Contract', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_service_contract', to='inventory.ServiceContract', verbose_name='Device Service Contract'),
        ),
        migrations.AlterField(
            model_name='device',
            name='slug',
            field=models.SlugField(blank=True, editable=False, help_text='Enter the Device slug', null=True, verbose_name='Device Slug'),
        ),
        migrations.AlterField(
            model_name='device',
            name='status',
            field=models.CharField(choices=[('RE', 'Checked In - Ready'), ('NR', 'Checked In - Not Ready'), ('CO', 'Checked Out'), ('AW', 'Awaiting Loan Approval'), ('RT', 'Awaiting Return Approval'), ('ST', 'In Storage'), ('DM', 'Damaged'), ('RE', 'Replacement Required'), ('MI', 'Missing'), ('DE', 'Decommisioned'), ('OB', 'Obselete'), ('RS', 'Restricted Use'), ('HO', 'On Hold'), ('SE', 'Servicing')], help_text='Select the status of the Device', max_length=2, verbose_name='Device Status'),
        ),
        migrations.AlterField(
            model_name='device',
            name='title',
            field=models.CharField(blank=True, help_text='Enter a title for the Device', max_length=128, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='device',
            name='variation',
            field=models.CharField(blank=True, help_text='Enter a varitaion of the Device', max_length=128, null=True, verbose_name='Device Variation'),
        ),
        migrations.AlterField(
            model_name='device',
            name='vendor',
            field=models.ForeignKey(blank=True, help_text='Select the Device Vendor', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_vendor', to='entity.Company', verbose_name='Device Vendor'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_contact',
            field=models.ForeignKey(blank=True, help_text='Select the vendor contact for the Warranty', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warranty_contact', to='entity.Person', verbose_name='Warranty Contact'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_duration',
            field=models.CharField(blank=True, help_text='Enter the duration of the Warranty', max_length=16, null=True, verbose_name='Warranty Duration'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_end',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the end date of the Warranty', null=True, verbose_name='Warranty End Date'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_extended',
            field=models.BooleanField(default=False, help_text='Has the Warranty been extended', verbose_name='Extended Warranty'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_id',
            field=models.CharField(blank=True, help_text='Enter the reference id of the Warranty', max_length=45, null=True, verbose_name='Warranty Reference ID'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_responsible',
            field=models.ForeignKey(blank=True, help_text='Select the staff resposnible for the Warranty', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warranty_resposible', to=settings.AUTH_USER_MODEL, verbose_name='Warranty Responsible'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_start',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the start date of the Warranty', null=True, verbose_name='Warranty Start Date'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_terms',
            field=models.TextField(blank=True, help_text='Enter the terms and conditions of the Warranty', null=True, verbose_name='Warranty Terms and Conditions'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_title',
            field=models.CharField(blank=True, help_text='Enter the internal id of the Warranty', max_length=128, null=True, verbose_name='Warranty Title'),
        ),
        migrations.AlterField(
            model_name='device',
            name='warranty_vendor',
            field=models.ForeignKey(blank=True, help_text='Select the vendor for the Warranty', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warranty_vendor', to='entity.Company', verbose_name='Warranty Vendor'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='condition',
            field=models.CharField(choices=[('NW', 'New'), ('EX', 'Excellent'), ('GD', 'Good'), ('AV', 'Average'), ('BA', 'Below Average'), ('PR', 'Poor'), ('DM', 'Damaged'), ('LO', 'Lost')], help_text='Select the condition of the Device', max_length=2, verbose_name='Device Condition'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='manufacturer',
            field=models.CharField(blank=True, help_text='Enter the Manufacturer', max_length=128, null=True, verbose_name='Device Manufacturer'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='model',
            field=models.CharField(blank=True, help_text='Enter a model for the Device', max_length=128, null=True, verbose_name='Device Model'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='model_number',
            field=models.CharField(blank=True, help_text='Enter the model number of the Device', max_length=45, null=True, verbose_name='Model Number'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='purchased',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the date the Device was purchased', null=True, verbose_name='Purchase Date'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='returnable',
            field=models.BooleanField(default=True, help_text='Is the Device returnable To stock', verbose_name='Returnable To Stock'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='serial_number',
            field=models.CharField(blank=True, help_text='Enter the serial number of the Device', max_length=128, null=True, verbose_name='Serial Number'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='slug',
            field=models.SlugField(blank=True, editable=False, help_text='Enter the Device slug', null=True, verbose_name='Device Slug'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='status',
            field=models.CharField(choices=[('RE', 'Checked In - Ready'), ('NR', 'Checked In - Not Ready'), ('CO', 'Checked Out'), ('AW', 'Awaiting Loan Approval'), ('RT', 'Awaiting Return Approval'), ('ST', 'In Storage'), ('DM', 'Damaged'), ('RE', 'Replacement Required'), ('MI', 'Missing'), ('DE', 'Decommisioned'), ('OB', 'Obselete'), ('RS', 'Restricted Use'), ('HO', 'On Hold'), ('SE', 'Servicing')], help_text='Select the status of the Device', max_length=2, verbose_name='Device Status'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='title',
            field=models.CharField(blank=True, help_text='Enter a title for the Device', max_length=128, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='variation',
            field=models.CharField(blank=True, help_text='Enter a varitaion of the Device', max_length=128, null=True, verbose_name='Device Variation'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_contact',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Person'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_duration',
            field=models.CharField(blank=True, help_text='Enter the duration of the Warranty', max_length=16, null=True, verbose_name='Warranty Duration'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_end',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the end date of the Warranty', null=True, verbose_name='Warranty End Date'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_extended',
            field=models.BooleanField(default=False, help_text='Has the Warranty been extended', verbose_name='Extended Warranty'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_id',
            field=models.CharField(blank=True, help_text='Enter the reference id of the Warranty', max_length=45, null=True, verbose_name='Warranty Reference ID'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_start',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the start date of the Warranty', null=True, verbose_name='Warranty Start Date'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_terms',
            field=models.TextField(blank=True, help_text='Enter the terms and conditions of the Warranty', null=True, verbose_name='Warranty Terms and Conditions'),
        ),
        migrations.AlterField(
            model_name='historicaldevice',
            name='warranty_title',
            field=models.CharField(blank=True, help_text='Enter the internal id of the Warranty', max_length=128, null=True, verbose_name='Warranty Title'),
        ),
        migrations.AlterField(
            model_name='historicalservice',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Enter the service cost', max_digits=12, null=True, verbose_name='Service Cost'),
        ),
        migrations.AlterField(
            model_name='historicalservice',
            name='issue',
            field=models.TextField(blank=True, help_text='Enter the issue', null=True, verbose_name='Issue'),
        ),
        migrations.AlterField(
            model_name='historicalservice',
            name='resolution',
            field=models.TextField(blank=True, help_text='Enter the resolution', null=True, verbose_name='Resolution'),
        ),
        migrations.AlterField(
            model_name='historicalservice',
            name='return_date',
            field=models.DateField(blank=True, help_text='Enter the return date to inventory', null=True, verbose_name='Date Returned to Inventory'),
        ),
        migrations.AlterField(
            model_name='historicalservice',
            name='returned',
            field=models.BooleanField(default=False, help_text='Device returned', verbose_name='Returned to Inventory'),
        ),
        migrations.AlterField(
            model_name='historicalservice',
            name='technician',
            field=models.CharField(blank=True, help_text="Enter the service techncician's name", max_length=64, null=True, verbose_name='Repair Technician'),
        ),
        migrations.AlterField(
            model_name='historicalservice',
            name='under_warranty',
            field=models.BooleanField(default=True, help_text='Device under warranty', verbose_name='Under Warranty'),
        ),
        migrations.AlterField(
            model_name='historicalservicecontract',
            name='contact',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Person'),
        ),
        migrations.AlterField(
            model_name='historicalservicecontract',
            name='renewal_cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Enter the renewal cost for the Service Contract', max_digits=12, null=True, verbose_name='Renewal Cost'),
        ),
        migrations.AlterField(
            model_name='historicalservicecontract',
            name='service_id',
            field=models.CharField(blank=True, help_text='Enter a contract id for the Service Contract', max_length=45, null=True, verbose_name='Service ID'),
        ),
        migrations.AlterField(
            model_name='historicalservicecontract',
            name='terms',
            field=models.TextField(blank=True, help_text='Enter the terms for the Service Contract', null=True, verbose_name='Terms and Conditions'),
        ),
        migrations.AlterField(
            model_name='historicalservicecontract',
            name='title',
            field=models.CharField(default=None, help_text='Enter a title for the Service Contract', max_length=128, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='historicalservicecontract',
            name='vendor',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Company'),
        ),
        migrations.AlterField(
            model_name='service',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Enter the service cost', max_digits=12, null=True, verbose_name='Service Cost'),
        ),
        migrations.AlterField(
            model_name='service',
            name='issue',
            field=models.TextField(blank=True, help_text='Enter the issue', null=True, verbose_name='Issue'),
        ),
        migrations.AlterField(
            model_name='service',
            name='resolution',
            field=models.TextField(blank=True, help_text='Enter the resolution', null=True, verbose_name='Resolution'),
        ),
        migrations.AlterField(
            model_name='service',
            name='return_date',
            field=models.DateField(blank=True, help_text='Enter the return date to inventory', null=True, verbose_name='Date Returned to Inventory'),
        ),
        migrations.AlterField(
            model_name='service',
            name='returned',
            field=models.BooleanField(default=False, help_text='Device returned', verbose_name='Returned to Inventory'),
        ),
        migrations.AlterField(
            model_name='service',
            name='service_contract',
            field=models.ForeignKey(blank=True, help_text='Select the Service Contract', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_service_contract', to='inventory.ServiceContract', verbose_name='Service Contract'),
        ),
        migrations.AlterField(
            model_name='service',
            name='serviced_by',
            field=models.ForeignKey(blank=True, help_text='Select the Service Vendor', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='serviced_by', to='entity.Company', verbose_name='Serviced By'),
        ),
        migrations.AlterField(
            model_name='service',
            name='technician',
            field=models.CharField(blank=True, help_text="Enter the service techncician's name", max_length=64, null=True, verbose_name='Repair Technician'),
        ),
        migrations.AlterField(
            model_name='service',
            name='under_warranty',
            field=models.BooleanField(default=True, help_text='Device under warranty', verbose_name='Under Warranty'),
        ),
        migrations.AlterField(
            model_name='servicecontract',
            name='contact',
            field=models.ForeignKey(blank=True, default=1, help_text='Enter the contact for the Service Contract', on_delete=django.db.models.deletion.DO_NOTHING, related_name='service_contract_contact', to='entity.Person', verbose_name='Contract Contact'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='servicecontract',
            name='renewal_cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Enter the renewal cost for the Service Contract', max_digits=12, null=True, verbose_name='Renewal Cost'),
        ),
        migrations.AlterField(
            model_name='servicecontract',
            name='responsible',
            field=models.ForeignKey(blank=True, default=1, help_text='Enter the resposnsible party for the Service Contract', on_delete=django.db.models.deletion.DO_NOTHING, related_name='service_sontract_responsible', to=settings.AUTH_USER_MODEL, verbose_name='Resposnsible Party'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='servicecontract',
            name='service_id',
            field=models.CharField(blank=True, help_text='Enter a contract id for the Service Contract', max_length=45, null=True, verbose_name='Service ID'),
        ),
        migrations.AlterField(
            model_name='servicecontract',
            name='terms',
            field=models.TextField(blank=True, help_text='Enter the terms for the Service Contract', null=True, verbose_name='Terms and Conditions'),
        ),
        migrations.AlterField(
            model_name='servicecontract',
            name='title',
            field=models.CharField(default=None, help_text='Enter a title for the Service Contract', max_length=128, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='servicecontract',
            name='vendor',
            field=models.ForeignKey(blank=True, default=1, help_text='Enter the vendor for the Service Contract', on_delete=django.db.models.deletion.DO_NOTHING, related_name='service_contract_vendor', to='entity.Company', verbose_name='Contract Vendor'),
            preserve_default=False,
        ),
        migrations.DeleteModel(
            name='Comment',
        ),
        migrations.DeleteModel(
            name='DeviceStatus',
        ),
        migrations.DeleteModel(
            name='DeviceStatusGroup',
        ),
        migrations.DeleteModel(
            name='DeviceType',
        ),
        migrations.DeleteModel(
            name='HistoricalComment',
        ),
        migrations.DeleteModel(
            name='HistoricalDeviceStatus',
        ),
        migrations.DeleteModel(
            name='HistoricalDeviceStatusGroup',
        ),
        migrations.DeleteModel(
            name='HistoricalDeviceType',
        ),
    ]
