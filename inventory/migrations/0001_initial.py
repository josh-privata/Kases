# Generated by Django 2.0.3 on 2018-07-27 10:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('entity', '0018_auto_20180727_1815'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Title')),
                ('make', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Make')),
                ('model', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Model')),
                ('purpose', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Purpose')),
                ('variation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Variation')),
                ('serial_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Serial Number')),
                ('condition', models.CharField(choices=[('EX', 'Excellent'), ('GD', 'Good'), ('AV', 'Average'), ('BA', 'Below Average'), ('PR', 'Poor'), ('DM', 'Damaged'), ('RE', 'Replacement Required'), ('MI', 'Missing')], default='EX', max_length=2, verbose_name='Device Codition')),
                ('returnable', models.BooleanField(default=True, verbose_name='Returnable To Stock')),
                ('service_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Device Service ID')),
                ('model_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Device Model Number')),
                ('warranty_title', models.CharField(blank=True, max_length=64, null=True, verbose_name='Warranty Title')),
                ('warranty_duration', models.CharField(blank=True, max_length=16, null=True, verbose_name='Warranty Duration')),
                ('warranty_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Warranty ID')),
                ('warranty_terms', models.CharField(blank=True, max_length=64, null=True, verbose_name='Warranty Terms and Conditions')),
                ('warranty_start', models.DateTimeField(blank=True, verbose_name='Warranty Start Date')),
                ('warranty_end', models.DateTimeField(blank=True, verbose_name='Warranty End Date')),
                ('warranty_extended', models.BooleanField(default=False, verbose_name='Extended Warranty')),
                ('purchased', models.DateTimeField(blank=True, verbose_name='Purchase Date')),
                ('warranty_vendor', models.CharField(blank=True, max_length=64, null=True, verbose_name='Warranty Contract')),
                ('warranty_contact', models.CharField(blank=True, max_length=128, null=True, verbose_name='Warranty Contract')),
                ('slug', models.SlugField(blank=True, editable=False, null=True, verbose_name='Device Slug')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceAuthorisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Authorisation')),
            ],
            options={
                'verbose_name': 'Device Classification',
                'verbose_name_plural': 'Device Classifications',
            },
        ),
        migrations.CreateModel(
            name='DeviceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Device Category',
                'verbose_name_plural': 'Device Categories',
            },
        ),
        migrations.CreateModel(
            name='DeviceClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Classification')),
            ],
            options={
                'verbose_name': 'Device Classification',
                'verbose_name_plural': 'Device Classifications',
            },
        ),
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Device Status',
                'verbose_name_plural': 'Device Status',
            },
        ),
        migrations.CreateModel(
            name='DeviceStatusGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Status Group')),
                ('status', models.ManyToManyField(blank=True, to='inventory.DeviceStatus', verbose_name='Device Status')),
            ],
            options={
                'verbose_name': 'Device Status Group',
                'verbose_name_plural': 'Device Status Groups',
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Device Type',
                'verbose_name_plural': 'Device Types',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDevice',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Title')),
                ('make', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Make')),
                ('model', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Model')),
                ('purpose', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Purpose')),
                ('variation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Device Variation')),
                ('serial_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Serial Number')),
                ('condition', models.CharField(choices=[('EX', 'Excellent'), ('GD', 'Good'), ('AV', 'Average'), ('BA', 'Below Average'), ('PR', 'Poor'), ('DM', 'Damaged'), ('RE', 'Replacement Required'), ('MI', 'Missing')], default='EX', max_length=2, verbose_name='Device Codition')),
                ('returnable', models.BooleanField(default=True, verbose_name='Returnable To Stock')),
                ('service_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Device Service ID')),
                ('model_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Device Model Number')),
                ('warranty_title', models.CharField(blank=True, max_length=64, null=True, verbose_name='Warranty Title')),
                ('warranty_duration', models.CharField(blank=True, max_length=16, null=True, verbose_name='Warranty Duration')),
                ('warranty_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Warranty ID')),
                ('warranty_terms', models.CharField(blank=True, max_length=64, null=True, verbose_name='Warranty Terms and Conditions')),
                ('warranty_start', models.DateTimeField(blank=True, verbose_name='Warranty Start Date')),
                ('warranty_end', models.DateTimeField(blank=True, verbose_name='Warranty End Date')),
                ('warranty_extended', models.BooleanField(default=False, verbose_name='Extended Warranty')),
                ('purchased', models.DateTimeField(blank=True, verbose_name='Purchase Date')),
                ('warranty_vendor', models.CharField(blank=True, max_length=64, null=True, verbose_name='Warranty Contract')),
                ('warranty_contact', models.CharField(blank=True, max_length=128, null=True, verbose_name='Warranty Contract')),
                ('slug', models.SlugField(blank=True, editable=False, null=True, verbose_name='Device Slug')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('authorisation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.DeviceAuthorisation')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.DeviceCategory')),
                ('classification', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.DeviceClassification')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('manufacturer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Company')),
                ('rep', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Person')),
                ('resposible_party', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical device',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeviceAuthorisation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Authorisation')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Device Classification',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeviceCategory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Category')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Device Category',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeviceClassification',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Classification')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Device Classification',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeviceStatus',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Device Status',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeviceStatusGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Status Group')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Device Status Group',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeviceType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(editable=False, verbose_name='Creation date and time')),
                ('modified', models.DateTimeField(editable=False, null=True, verbose_name='Modification date and time')),
                ('private', models.BooleanField(default=False, verbose_name='Private')),
                ('title', models.CharField(blank=True, default=None, max_length=250, null=True, verbose_name='Type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Device Type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalService',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('issue', models.CharField(blank=True, max_length=64, null=True, verbose_name='Service Issue')),
                ('resolution', models.CharField(blank=True, max_length=64, null=True, verbose_name='Service Resolution')),
                ('work_done', models.CharField(blank=True, max_length=64, null=True, verbose_name='Work Done')),
                ('left_inventory', models.CharField(blank=True, max_length=16, null=True, verbose_name='Date Left Inventory')),
                ('return_date', models.CharField(blank=True, max_length=16, null=True, verbose_name='Date Returned to Inventory')),
                ('cost', models.CharField(blank=True, max_length=45, null=True, verbose_name='Service Cost')),
                ('technician', models.CharField(blank=True, max_length=64, null=True, verbose_name='Repair Technician')),
                ('returned', models.BooleanField(default=False, verbose_name='Device Returned to Inventory')),
                ('under_warranty', models.BooleanField(default=True, verbose_name='Under Warranty')),
                ('parts_replaced', models.BooleanField(default=False, verbose_name='Parts Replaced')),
                ('device_replaced', models.BooleanField(default=False, verbose_name='Device Replaced')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('responsible', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Service',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServiceContract',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64, null=True, verbose_name='Contract Title')),
                ('duration', models.CharField(blank=True, max_length=16, null=True, verbose_name='Contract Duration')),
                ('contract_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Service Contract ID')),
                ('service_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Device Service ID')),
                ('model_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Device Model Number')),
                ('terms', models.CharField(blank=True, max_length=64, null=True, verbose_name='Terms and Conditions')),
                ('renewal_date', models.CharField(blank=True, max_length=64, null=True, verbose_name='Renewal Date')),
                ('renewal_cost', models.CharField(blank=True, max_length=64, null=True, verbose_name='Renewal Cost')),
                ('vendor', models.CharField(blank=True, max_length=64, null=True, verbose_name='Service Contract')),
                ('contact', models.CharField(blank=True, max_length=128, null=True, verbose_name='Service Contract')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('responsible', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Service Contract',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalStorage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.Device')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical storage',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.CharField(blank=True, max_length=64, null=True, verbose_name='Service Issue')),
                ('resolution', models.CharField(blank=True, max_length=64, null=True, verbose_name='Service Resolution')),
                ('work_done', models.CharField(blank=True, max_length=64, null=True, verbose_name='Work Done')),
                ('left_inventory', models.CharField(blank=True, max_length=16, null=True, verbose_name='Date Left Inventory')),
                ('return_date', models.CharField(blank=True, max_length=16, null=True, verbose_name='Date Returned to Inventory')),
                ('cost', models.CharField(blank=True, max_length=45, null=True, verbose_name='Service Cost')),
                ('technician', models.CharField(blank=True, max_length=64, null=True, verbose_name='Repair Technician')),
                ('returned', models.BooleanField(default=False, verbose_name='Device Returned to Inventory')),
                ('under_warranty', models.BooleanField(default=True, verbose_name='Under Warranty')),
                ('parts_replaced', models.BooleanField(default=False, verbose_name='Parts Replaced')),
                ('device_replaced', models.BooleanField(default=False, verbose_name='Device Replaced')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_service', to=settings.AUTH_USER_MODEL, verbose_name='Resposnsible Party')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Service History',
            },
        ),
        migrations.CreateModel(
            name='ServiceContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64, null=True, verbose_name='Contract Title')),
                ('duration', models.CharField(blank=True, max_length=16, null=True, verbose_name='Contract Duration')),
                ('contract_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Service Contract ID')),
                ('service_id', models.CharField(blank=True, max_length=45, null=True, verbose_name='Device Service ID')),
                ('model_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Device Model Number')),
                ('terms', models.CharField(blank=True, max_length=64, null=True, verbose_name='Terms and Conditions')),
                ('renewal_date', models.CharField(blank=True, max_length=64, null=True, verbose_name='Renewal Date')),
                ('renewal_cost', models.CharField(blank=True, max_length=64, null=True, verbose_name='Renewal Cost')),
                ('vendor', models.CharField(blank=True, max_length=64, null=True, verbose_name='Service Contract')),
                ('contact', models.CharField(blank=True, max_length=128, null=True, verbose_name='Service Contract')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_contract', to=settings.AUTH_USER_MODEL, verbose_name='Resposnsible Party')),
            ],
            options={
                'verbose_name': 'Service Contract',
                'verbose_name_plural': 'Service Contracts',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Storage', to='inventory.Device')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='service_contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.ServiceContract', verbose_name='Service Contract'),
        ),
        migrations.AddField(
            model_name='service',
            name='serviced_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entity.Company', verbose_name='Serviced By'),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='service_contract',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.ServiceContract'),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='serviced_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Company'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='service_contract',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.ServiceContract'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.DeviceStatus'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.DeviceType'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='vendor',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='entity.Company'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='warranty_responsible',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='device',
            name='authorisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.DeviceAuthorisation', verbose_name='Device Authorisation'),
        ),
        migrations.AddField(
            model_name='device',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.DeviceCategory', verbose_name='Device Category'),
        ),
        migrations.AddField(
            model_name='device',
            name='classification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.DeviceClassification', verbose_name='Device Classification'),
        ),
        migrations.AddField(
            model_name='device',
            name='manufacturer',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='manufacturer', to='entity.Company', verbose_name='Device Manufacturer'),
        ),
        migrations.AddField(
            model_name='device',
            name='rep',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales_rep', to='entity.Person', verbose_name='Vendor Sales Rep'),
        ),
        migrations.AddField(
            model_name='device',
            name='resposible_party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resposible_party', to=settings.AUTH_USER_MODEL, verbose_name='Device Manager'),
        ),
        migrations.AddField(
            model_name='device',
            name='service_contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.ServiceContract', verbose_name='Device Service Contract'),
        ),
        migrations.AddField(
            model_name='device',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.DeviceStatus', verbose_name='Device Status'),
        ),
        migrations.AddField(
            model_name='device',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.DeviceType', verbose_name='Device Type'),
        ),
        migrations.AddField(
            model_name='device',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to='entity.Company', verbose_name='Device Vendor'),
        ),
        migrations.AddField(
            model_name='device',
            name='warranty_responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_warranty', to=settings.AUTH_USER_MODEL, verbose_name='Resposnsible For Warranty'),
        ),
    ]
